#!/bin/bash

user_input_jira_id="$1"

confirm() {
  echo
  read -p "${1} (y/n) " -n 1 input
  echo
  [[ "${input}" =~ ^[Yy]$ ]] && return 0 || return 1
}


# Fail without user input.
if [ -z "$user_input_jira_id" ]; then
  echo -e "Jira ID required."
  exit 1
fi


# Fetch the Jira issue.

echo "Fetching $user_input_jira_id Jira issue..."
issue_url="$JIRA_BASE_URL/rest/api/latest/issue/$user_input_jira_id"
response=$(curl -s -u "$JIRA_EMAIL:$JIRA_TOKEN" -H "Content-Type: application/json" "$issue_url")
issue_id=$(echo "$response" | jq -r '.key')
issue_title=$(echo "$response" | jq -r '.fields.summary')


# Confirm the issue is correct.

if [ "$issue_id" == "null" ]; then
  echo -e "$response"
  exit 1
fi
confirm "$issue_id: $issue_title?" || exit


# Create the branch.

issue_type=$(echo "$response" | jq -r '.fields.issuetype.name')
branch=$(echo "$issue_id-$issue_type" | sed 's/ /-/g')
echo "Creating '$branch' branch off of main..."
git checkout main && git pull && git checkout -b "$branch"


# Set Jira ticket "In Progress".

transition_url="$JIRA_BASE_URL/rest/api/latest/issue/$issue_id/transitions"
response=$(curl -s -u "$JIRA_EMAIL:$JIRA_TOKEN" "Content-Type: application/json" "$transition_url")
in_progress_transition_id=$(echo "$response" | jq -r '.transitions[] | select(.name == "In Progress") | .id')
transition_data='{"transition": {"id": "'"$in_progress_transition_id"'"}}'
response=$(curl -s -u "$JIRA_EMAIL:$JIRA_TOKEN" -X POST -H "Content-Type: application/json" --data "$transition_data" "$transition_url")
echo -e "$response"


# Assign me to the ticket.

response=$(curl \
  --silent \
  --user "$JIRA_EMAIL:$JIRA_TOKEN" \
  --header 'Accept: application/json' \
  --header 'Content-Type: application/json' \
  --request PUT \
  --url "$JIRA_BASE_URL/rest/api/latest/issue/$issue_id/assignee" \
  --data '{ "accountId": "'"$JIRA_ACCOUNT_ID"'" }'
)
echo -e "$response"
