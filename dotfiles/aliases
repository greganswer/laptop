unalias -m '*'

#
# General
#
alias l='ls -lah'
alias updateshell='source ~/.zshrc'
alias edit='code'
alias sshaddkey='ssh-add ~/.ssh/id_rsa'
alias malias='edit ~/.oh-my-zsh/custom/aliases.zsh'
curlj() {
  ARGS=$1
  curl --header "Content-Type: application/json" $ARGS | jq
}
convertmovrecordingstomp4() {
  input_dir="$HOME/Desktop"

  # Convert .mov files to .mp4
  for file in "$input_dir"/*.mov; do
      if [ -f "$file" ]; then
          filename=$(basename "$file")
          filename="${filename%.*}"
          output_file="$input_dir/$filename.mp4"

          if [ ! -f "$output_file" ]; then
              # ffmpeg -i "$file" -c:v libx264 -crf 23 -preset medium -c:a aac -b:a 128k "$output_file"
              ffmpeg -i "$file" "$output_file"
              echo "Converted $filename.mov to $filename.mp4"
          else
              echo "Skipping $filename.mov as $filename.mp4 already exists"
          fi
      fi
  done

  echo "Conversion complete!"
}

#
# Git
#
# Most used
alias gnb='git checkout main && git pull && git checkout -b ga-a$(date +"%Y-%m-%d")-$(openssl rand -hex 2)'
alias gca='git commit --all --no-verify'
alias gp='git push'
alias gchanges='echo "$(git diff --name-only | cat) $(git diff --name-only main...HEAD | cat)" | xargs'
alias cop='rubocop -A $(gchanges); rubocop -A $(gchanges)'
alias spec='bundle exec rspec $(git diff --name-only | grep _spec | cat) $(git diff --name-only main...HEAD | grep _spec| cat) --only-failures --next-failure'
specwatch() {
  gchanges | entr -r bundle exec rspec "$@"
}
gpr() {
  # https://glab.readthedocs.io/en/latest/mr/create.html
  glab mr create --fill --push --remove-source-branch --squash-before-merge --title $1 --assignee ganswer --reviewer justin-rohrman,lucasgrocha_eh
}

# Additional
alias gs='git status'
alias gd='git diff'
alias ga='git add'
alias gc='git commit'
alias gl="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short"
alias gll='git log --stat -p'
alias gitdelete-local-branches='git branch | grep -v "main" | grep -v "develop" | grep -v "master" | xargs git branch -D'
alias gitmaster-pull-and-fetch='git checkout master && git pull && git fetch && git checkout -'
alias gitpull-and-fetch='git pull && git fetch'
function grename() {
  if [[ -z "$1" || -z "$2" ]]; then
    echo "Usage: $0 old_branch new_branch"
    return 1
  fi

  # Rename branch locally
  git branch -m "$1" "$2"
  # Rename branch in origin remote
  if git push origin :"$1"; then
    git push --set-upstream origin "$2"
  fi
}
#
# Local Ports
#
porthog() {
  PORT=$1
  echo $(lsof -ti tcp:$PORT)
}

freeport() {
  PORT=$1
  $(lsof -ti tcp:$PORT) | xargs kill
  # PID=`lsof -ti tcp:$PORT`
  # if [ -z "$PID" ]; then
  #  echo "No process running on port $PORT"
  # else
  #   kill -KILL $PID
  # fi
}

