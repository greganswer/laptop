#
# Exports
#
export VISUAL="vim"     # -w causes terminal to wait till file is closed
export EDITOR="$VISUAL" # export EDITOR=nano # For Linux


# shellcheck disable=SC1090
[[ -f ~/.secrets ]] && source ~/.secrets


#
# PATH variable
#
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/opt/openjdk/bin:$PATH"
export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/.composer/vendor/bin:$PATH"
export PGHOST=localhost
if which rbenv >/dev/null; then eval "$(rbenv init -)"; fi


#
# Ruby
#
# https://github.com/rails/rails/issues/38560
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES


unalias -m '*'

#
# General
#
alias cld='claude'
alias l='ls -lah'
alias v='nvim'
alias updateshell='source ~/.zshrc'
alias sshaddkey='ssh-add ~/.ssh/id_rsa'
curlj() {
  ARGS=$1
  curl --header "Content-Type: application/json" $ARGS | jq
}
convertmovrecordingstomp4() {
  input_dir="$HOME/Desktop"

  # Convert .mov files to .mp4
  for file in "$input_dir"/*.mov; do
      if [ -f "$file" ]; then
          filename=$(basename "$file")
          filename="${filename%.*}"
          output_file="$input_dir/$filename.mp4"

          if [ ! -f "$output_file" ]; then
              # ffmpeg -i "$file" -c:v libx264 -crf 23 -preset medium -c:a aac -b:a 128k "$output_file"
              ffmpeg -i "$file" "$output_file"
              echo "Converted $filename.mov to $filename.mp4"
          else
              echo "Skipping $filename.mov as $filename.mp4 already exists"
          fi
      fi
  done

  echo "Conversion complete!"
}

#
# Git
#
alias gnb='git checkout main && git pull && git checkout -b ga-a$(date +"%Y-%m-%d")-$(openssl rand -hex 2)'
alias gca='git commit --all --no-verify'
alias gp='git push'
alias gs='git status'
alias gchanges='echo "$(git diff --name-only | cat) $(git diff --name-only main...HEAD | cat)" | xargs'
alias cop='rubocop -A $(gchanges); rubocop -A $(gchanges)'
alias spec='bundle exec rspec $(git diff --name-only | grep _spec | cat) $(git diff --name-only main...HEAD | grep _spec| cat) --only-failures --next-failure'
specwatch() {
  gchanges | entr -r bundle exec rspec "$@"
}
gpr() {
  # https://glab.readthedocs.io/en/latest/mr/create.html
  glab mr create --fill --push --remove-source-branch --squash-before-merge --title $1 --assignee ganswer --reviewer justin-rohrman,lucasgrocha_eh
}

#
# Local Ports
#
porthog() {
  PORT=$1
  echo $(lsof -ti tcp:$PORT)
}

freeport() {
  PORT=$1
  $(lsof -ti tcp:$PORT) | xargs kill
}

